用况迭代增量开发
1、用况先写基本流，只关心最重要的流程。举个例子

用况1
听歌：
   1、music_consumer启动软件
   2、系统显示单曲
   3、music_consumer点击播放单曲
   4、系统将music_consumer所选择的播放单曲并将此首单曲加入到歌曲播放列表，同时系统在该首单曲前面加入播放标志，系统显示进度为0。 系统在单曲播放栏单曲信息更换为music_consumer所选择的单曲信息(同时播放的客户可以是多个)
    {播放歌曲}
    5.系统播放该歌曲，使用解码器解码、并将音频数据回放。.系统根据单曲播放进度显示进度
    {单曲播放结束}
    6.单曲结束，根据music_consumer设置自动播放歌曲播放列表中下一首单曲。
    {列表播放结束} 
    7. 用况结束。
然后画通信图、分析类图、详细设计类图、然后打代码、实现demo


在显示单曲的时候，music_consumer可能有多种选择，于是我们再从需求出发

迭代听歌用况
用况2

在第一次用况的2  系统显示单曲 扩展为 music_consumer选择推荐界面或者music_consumer选择搜索...........
再次修改通信图（添加一些）、分析类图、详细设计类图、然后打代码实现。

增量开发 就是先实现用况1的基本流，再实现用况1的备选流。一个用况完了就可以进行测试。
画分析类图的时候，画一个控制类工厂（就是一个控制类，控制基本流的执行）
添加了子流、备选流的时候、控制类判断基本流的扩展点在即将进去备选流的时候，创建一个控制类2,该类控制备选流/子流的执行。

迭代用况后，实现用况2的基本流，再实现用况2的备选流。

实现根据类图写，类图的命名从用况关键字提取。实体之间才有关联（关机后数据依然存在）

控制类-》TCP通信模块（c/c++）或QTCP（关机之后连接就不存在了）
边界类-》QML

